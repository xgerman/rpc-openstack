---
# Copyright 2015, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Set facts for the AIO bootstrap process
  hosts: localhost
  user: root
  tasks:
    - name: Set ceph user_variables override
      set_fact:
        user_variables_overrides:
          apply_security_hardening: "{{ rpco_deploy_hardening }}"
      when: "{{ not rpco_deploy_ceph | bool }}"
    - name: Set ceph user_variables override
      set_fact:
        user_variables_overrides:
          apply_security_hardening: "{{ rpco_deploy_hardening }}"
          glance_default_store: rbd
          nova_libvirt_images_rbd_pool: vms
      when: "{{ rpco_deploy_ceph | bool }}"
  vars:
    rpco_deploy_ceph: "{{ lookup('env', 'DEPLOY_CEPH') }}"
    rpco_deploy_hardening: "{{ lookup('env', 'DEPLOY_HARDENING') }}"

- name: Execute the OSA AIO bootstrap
  include: "{{ lookup('env', 'OA_DIR') }}/tests/bootstrap-aio.yml"
  vars:
    bootstrap_host_apt_distribution_suffix_list: "{{ (lookup('env', 'RPCO_APT_ARTIFACTS_AVAILABLE') | bool) | ternary([], ['updates', 'backports']) }}"
    scenario: "{% if lookup('env', 'DEPLOY_IRONIC') == 'yes' %}ironic{% else %}{{ lookup('env', 'DEPLOY_CEPH') |bool |ternary('ceph','swift') }}{%endif%}"
    bootstrap_host_user_variables_filename: "user_osa_variables_overrides.yml"
    bootstrap_host_user_secrets_filename: "user_osa_secrets.yml"
    uca_enable: no
    confd_overrides:
      swift:
        - name: cinder.yml.aio
        - name: glance.yml.aio
        - name: heat.yml.aio
        - name: horizon.yml.aio
        - name: keystone.yml.aio
        - name: neutron.yml.aio
        - name: nova.yml.aio
        - name: swift.yml.aio
      ceph:
        - name: cinder.yml.aio
        - name: glance.yml.aio
        - name: heat.yml.aio
        - name: horizon.yml.aio
        - name: keystone.yml.aio
        - name: neutron.yml.aio
        - name: nova.yml.aio
        - name: swift.yml.aio
        - name: ceph.yml.aio
          path: "{{ lookup('env', 'RPCD_DIR') ~ '/etc/openstack_deploy/conf.d' }}"
      ironic:
        - name: cinder.yml.aio
        - name: glance.yml.aio
        - name: heat.yml.aio
        - name: horizon.yml.aio
        - name: keystone.yml.aio
        - name: neutron.yml.aio
        - name: nova.yml.aio
        - name: swift.yml.aio
        - name: ironic.yml.aio

- name: Execute the RPC-O AIO adjustments
  hosts: localhost
  user: root
  tasks:
    # We need to write out the cinder_backend block here, so we avoid
    # running this block through the config_template module when the
    # upstream bootstrap role puts the conf.d files into place.
    - name: Write out storage hosts and cinder backends to conf.d/ceph.yml
      lineinfile:
        name: "/etc/openstack_deploy/conf.d/ceph.yml"
        line: |
          storage_hosts:
            aio1:
              ip: 172.29.236.100
              container_vars:
                cinder_backends:
                  limit_container_types: cinder_volume
                  ceph:
                    volume_driver: cinder.volume.drivers.rbd.RBDDriver
                    rbd_pool: volumes
                    rbd_ceph_conf: /etc/ceph/ceph.conf
                    rbd_flatten_volume_from_snapshot: 'false'
                    rbd_max_clone_depth: 5
                    rbd_store_chunk_size: 4
                    rados_connect_timeout: -1
                    glance_api_version: 2
                    volume_backend_name: ceph
                    rbd_user: "{%raw%}{{ cinder_ceph_client }}{%endraw%}"
                    rbd_secret_uuid: "{%raw%}{{ cinder_ceph_client_uuid }}{%endraw%}"
      when: "{{ rpco_deploy_ceph | bool }}"

    - name: Ensure that the env.d directory is present
      file:
        path: "/etc/openstack_deploy/env.d"
        state: directory

    - name: Copy the generally applicable RPC-O config files
      copy:
        src: "{{ rpco_cfg_src_path }}/{{ item.name }}"
        dest: "/etc/openstack_deploy/{{ item.name }}"
        mode: "{{ item.mode | default(omit) }}"
      when: "{{ (item.condition | default(True)) | bool }}"
      with_items:
        - name: "env.d/elasticsearch.yml"
          condition: "{{ rpco_deploy_elk | bool }}"
        - name: "env.d/kibana.yml"
          condition: "{{ rpco_deploy_elk | bool }}"
        - name: "env.d/logstash.yml"
          condition: "{{ rpco_deploy_elk | bool }}"

    - name: Template the RPC-O config files
      config_template:
        src: "{{ rpco_cfg_src_path }}/{{ item.name }}"
        dest: "/etc/openstack_deploy/{{ item.name | regex_replace('.aio$', '') }}"
        config_overrides: "{{ item.override | default({}) }}"
        config_type: "yaml"
      when: "{{ (item.condition | default(True)) | bool }}"
      with_items:
        - name: "user_rpco_secrets.yml"
          override:
            kibana_password: "{{ lookup('env', 'ADMIN_PASSWORD') }}"
        - name: "user_rpco_variables_overrides.yml.aio"
        - name: "env.d/ceph.yml"
          condition: "{{ rpco_deploy_ceph | bool }}"
          override:
            container_skel:
              ceph_osd_container:
                properties:
                  is_metal: false

    - name: Update the RPC-O secrets
      shell: "{{ rpco_base_dir }}/scripts/update-secrets.sh"

    - name: Check for the existance of a gating settings file
      stat:
        path: "{{ rpco_cfg_src_path }}/user_zzz_gating_variables.yml"
      register: gating_vars

    - name: Copy gating settings file into place
      copy:
        src: "{{ rpco_cfg_src_path }}/user_zzz_gating_variables.yml"
        dest: "/etc/openstack_deploy/user_zzz_gating_variables.yml"
      when:
        - gating_vars.stat.exists is defined
        - gating_vars.stat.exists | bool

  vars:
    rpco_base_dir: "{{ lookup('env', 'BASE_DIR') }}"
    osa_cfg_src_path: "{{ lookup('env', 'OA_DIR') ~ '/etc/openstack_deploy' }}"
    rpco_cfg_src_path: "{{ lookup('env', 'RPCD_DIR') ~ '/etc/openstack_deploy' }}"
    rpco_deploy_ceph: "{{ lookup('env', 'DEPLOY_CEPH') }}"
    rpco_deploy_elk: "{{ lookup('env', 'DEPLOY_ELK') }}"
    rpco_deploy_swift: "{{ lookup('env', 'DEPLOY_SWIFT') }}"
